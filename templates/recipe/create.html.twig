{# templates/recipe/new.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Create New Recipe{% endblock %}

{% block stylesheets %}
<style>
    .custom-error {
        color: red;
    }
</style>
{% endblock %}

{% block body %}
    <div class="max-w-2xl mx-auto mt-6 px-4">
        <h1 class="text-3xl font-semibold mb-4">Create New Recipe</h1>

        {{ form_start(form, {'attr': {'class': 'bg-gray-800 shadow-md rounded px-8 pt-6 pb-8 mb-4'}}) }}
        {{ form_label(form.title, "Title") }}
        {{ form_widget(form.title) }}
        <div class="custom-error mb-4">
            {{ form_errors(form.title) }}
        </div>

        {{ form_label(form.ingredients, "Ingredients") }}
        {{ form_widget(form.ingredients) }}
        <div class="custom-error mb-4">
            {{ form_errors(form.ingredients) }}
        </div>

        {{ form_label(form.directions, "Directions") }}
        {{ form_widget(form.directions) }}
        <div class="custom-error mb-4">
            {{ form_errors(form.directions) }}
        </div>

        <div id="sourceField">
            {{ form_row(form.source) }}
        </div>

        {{ form_label(form.link, 'Link') }}
        {{ form_widget(form.link, {'attr': {'style': 'display:none;'}}) }}
        <div class="custom-error mb-4" id="link_error">
            {{ form_errors(form.link) }}
        </div>

        {{ form_label(form.site, 'Site') }}
        {{ form_widget(form.site, {'attr': {'style': 'display:none;'}}) }}
        <div class="custom-error mb-4" id="site_error">
            {{ form_errors(form.site) }}
        </div>

        {{ form_label(form.ner, "Ingredients (no quantities)") }}
        {{ form_widget(form.ner) }}
        <div class="custom-error mb-4">
            {{ form_errors(form.ner) }}
        </div>

        {{ form_row(form.imageUrl) }}

        <div class="flex items-center justify-between mt-4">
            <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                Save Recipe
            </button>
        </div>
        {{ form_end(form) }}
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const sourceField = document.getElementById('{{ form.source.vars.id }}');
            const linkField = document.getElementById('{{ form.link.vars.id }}');
            const linkLabel = findLabelForControl({{ form.link.vars.id }})
            const linkError = document.getElementById('link_error')
            const siteField = document.getElementById('{{ form.site.vars.id }}');
            const siteLabel = findLabelForControl({{ form.site.vars.id }})
            const siteError = document.getElementById('site_error')

            function toggleFields() {
                if (sourceField.value !== 'From website') {
                    linkField.style.display = 'none';
                    siteField.style.display = 'none';
                    linkLabel.style.display = 'none';
                    siteLabel.style.display = 'none';
                    linkError.style.display = 'none';
                    siteError.style.display = 'none';
                    linkField.value = null
                    siteField.value = null
                    linkField.removeAttribute('required');
                    siteField.removeAttribute('required');
                } else {
                    linkField.style.display = 'block';
                    siteField.style.display = 'block';
                    linkLabel.style.display = 'block';
                    siteLabel.style.display = 'block';
                    linkError.style.display = 'block';
                    siteError.style.display = 'block';
                    linkField.setAttribute('required', 'required');
                    siteField.setAttribute('required', 'required');
                }
            }

            function findLabelForControl(el) {
                const idVal = el.id;
                const labels = document.getElementsByTagName('label');
                for (let i = 0; i < labels.length; i++) {
                    if (labels[i].htmlFor === idVal)
                        return labels[i];
                }
            }
            toggleFields();
            sourceField.addEventListener('change', function () {
                toggleFields();
            });
        });
    </script>
{% endblock %}
